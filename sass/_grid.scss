@use "sass:math";

$grid-columns: 12;


//gap styles
$gap: (
  "0": 0,
  "1": 0.25rem,
  "2": 0.5rem,
  "3": 1rem,
  "4": 2rem,
  "5": 4rem
);

//making gap styles
@each $key, $val in $gap {
  .gap-#{$key} {
    gap: $val
  }
};


//justify content
$justify: (
  "start": start,
  "center": center,
  "end": end,
  "between": space-between,
  "around": space-around
);

//making justify content styles
@each $key, $val in $justify {
  .justify-#{$key} {
    justify-content: $val;
  }
};

//align items
$items: (
  "start": start,
  "center": center,
  "end": end
);


//making align items styles
@each $key, $val in $items {
  .items-#{$key} {
    align-items: $val;
  }
};


// base layout classes
.header {
  display: flex;
  flex-wrap: wrap;
}
#top-header {
  @include sm {
    flex-direction: column;
    gap: 5rem;
    padding: $base-padding * 1.5 $base-padding * 1.5;
  }
  @include lg {
    flex-direction: row;
    gap: 15rem;
    padding: $base-padding * 1.5 $base-padding * 10;
  }
}
#main {
  @include sm {
    flex-direction: column;
    gap: 5rem;
    padding: $base-padding * 1.5 $base-padding * 1.5;
  }
  @include lg {
    flex-direction: row;
    gap: 15rem;
    padding: $base-padding * 1.5 $base-padding * 10;
  }
}


// col classes
@include sm {
  @for $i from 1 through $grid-columns {
    .cols-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include md {
  @for $i from 1 through $grid-columns {
    .cols-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include lg {
  @for $i from 1 through $grid-columns {
    .cols-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include xl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}